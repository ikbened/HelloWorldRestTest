<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="com.spronq.helloworldresttest.MessageTest" duration-ms="1561" started-at="2018-02-02T14:43:05Z" finished-at="2018-02-02T14:43:07Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="1561" started-at="2018-02-02T14:43:05Z" finished-at="2018-02-02T14:43:07Z">
      <class name="com.spronq.helloworldresttest.MessageTest">
        <test-method status="PASS" signature="initPath()[pri:0, instance:com.spronq.helloworldresttest.MessageTest@19dfb72a]" name="initPath" is-config="true" duration-ms="325" started-at="2018-02-02T15:43:05Z" finished-at="2018-02-02T15:43:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPath -->
        <test-method status="PASS" signature="checkNames()[pri:0, instance:com.spronq.helloworldresttest.MessageTest@19dfb72a]" name="checkNames" duration-ms="1119" started-at="2018-02-02T15:43:06Z" finished-at="2018-02-02T15:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNames -->
        <test-method status="FAIL" signature="checkNamesWithErr()[pri:0, instance:com.spronq.helloworldresttest.MessageTest@19dfb72a]" name="checkNamesWithErr" duration-ms="33" started-at="2018-02-02T15:43:07Z" finished-at="2018-02-02T15:43:07Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path [0].firstName doesn't match.
Expected: Ed
  Actual: Nabi
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path [0].firstName doesn't match.
Expected: Ed
  Actual: Nabi

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:451)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:613)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:251)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:234)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at com.spronq.helloworldresttest.MessageTest.checkNamesWithErr(MessageTest.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNamesWithErr -->
        <test-method status="PASS" signature="checkResponseCodeForCorrectRequest()[pri:0, instance:com.spronq.helloworldresttest.MessageTest@19dfb72a]" name="checkResponseCodeForCorrectRequest" duration-ms="19" started-at="2018-02-02T15:43:07Z" finished-at="2018-02-02T15:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseCodeForCorrectRequest -->
        <test-method status="PASS" signature="checkResponseCodeForIncorrectRequest()[pri:0, instance:com.spronq.helloworldresttest.MessageTest@19dfb72a]" name="checkResponseCodeForIncorrectRequest" duration-ms="14" started-at="2018-02-02T15:43:07Z" finished-at="2018-02-02T15:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseCodeForIncorrectRequest -->
        <test-method status="PASS" signature="checkResponseContentTypeJson()[pri:0, instance:com.spronq.helloworldresttest.MessageTest@19dfb72a]" name="checkResponseContentTypeJson" duration-ms="12" started-at="2018-02-02T15:43:07Z" finished-at="2018-02-02T15:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseContentTypeJson -->
        <test-method status="PASS" signature="logResponseNames()[pri:0, instance:com.spronq.helloworldresttest.MessageTest@19dfb72a]" name="logResponseNames" duration-ms="29" started-at="2018-02-02T15:43:07Z" finished-at="2018-02-02T15:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logResponseNames -->
      </class> <!-- com.spronq.helloworldresttest.MessageTest -->
    </test> <!-- Command line test -->
  </suite> <!-- com.spronq.helloworldresttest.MessageTest -->
</testng-results>
